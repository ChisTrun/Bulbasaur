// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.0
// source: bulbasaur/api/bulbasaur_config.proto

package bulbasaur

import (
	api "bulbasaur/pkg/carbon/api"
	api2 "bulbasaur/pkg/database/api"
	api1 "bulbasaur/pkg/logger/api"
	api3 "bulbasaur/pkg/redis/api"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Config struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Listener      *api.Listener          `protobuf:"bytes,1,opt,name=listener,proto3" json:"listener,omitempty"`
	Logger        *api1.Logger           `protobuf:"bytes,2,opt,name=logger,proto3" json:"logger,omitempty"`
	Database      *api2.Database         `protobuf:"bytes,3,opt,name=database,proto3" json:"database,omitempty"`
	Redis         *api3.Redis            `protobuf:"bytes,4,opt,name=redis,proto3" json:"redis,omitempty"`
	HttpListener  *api.Listener          `protobuf:"bytes,8,opt,name=http_listener,json=httpListener,proto3" json:"http_listener,omitempty"`
	Auth          *Auth                  `protobuf:"bytes,9,opt,name=auth,proto3" json:"auth,omitempty"`
	Google        *Google                `protobuf:"bytes,10,opt,name=google,proto3" json:"google,omitempty"`
	Frontend      *FrontEnd              `protobuf:"bytes,11,opt,name=frontend,proto3" json:"frontend,omitempty"`
	Mailer        *Mailer                `protobuf:"bytes,12,opt,name=mailer,proto3" json:"mailer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Config) Reset() {
	*x = Config{}
	mi := &file_bulbasaur_api_bulbasaur_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_bulbasaur_api_bulbasaur_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_bulbasaur_api_bulbasaur_config_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetListener() *api.Listener {
	if x != nil {
		return x.Listener
	}
	return nil
}

func (x *Config) GetLogger() *api1.Logger {
	if x != nil {
		return x.Logger
	}
	return nil
}

func (x *Config) GetDatabase() *api2.Database {
	if x != nil {
		return x.Database
	}
	return nil
}

func (x *Config) GetRedis() *api3.Redis {
	if x != nil {
		return x.Redis
	}
	return nil
}

func (x *Config) GetHttpListener() *api.Listener {
	if x != nil {
		return x.HttpListener
	}
	return nil
}

func (x *Config) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *Config) GetGoogle() *Google {
	if x != nil {
		return x.Google
	}
	return nil
}

func (x *Config) GetFrontend() *FrontEnd {
	if x != nil {
		return x.Frontend
	}
	return nil
}

func (x *Config) GetMailer() *Mailer {
	if x != nil {
		return x.Mailer
	}
	return nil
}

type Auth struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccessKey     string                 `protobuf:"bytes,1,opt,name=AccessKey,proto3" json:"AccessKey,omitempty"`
	AccessExp     int32                  `protobuf:"varint,2,opt,name=AccessExp,proto3" json:"AccessExp,omitempty"`
	RefreshKey    string                 `protobuf:"bytes,3,opt,name=RefreshKey,proto3" json:"RefreshKey,omitempty"`
	RefreshExp    int32                  `protobuf:"varint,4,opt,name=RefreshExp,proto3" json:"RefreshExp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Auth) Reset() {
	*x = Auth{}
	mi := &file_bulbasaur_api_bulbasaur_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Auth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth) ProtoMessage() {}

func (x *Auth) ProtoReflect() protoreflect.Message {
	mi := &file_bulbasaur_api_bulbasaur_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth.ProtoReflect.Descriptor instead.
func (*Auth) Descriptor() ([]byte, []int) {
	return file_bulbasaur_api_bulbasaur_config_proto_rawDescGZIP(), []int{1}
}

func (x *Auth) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *Auth) GetAccessExp() int32 {
	if x != nil {
		return x.AccessExp
	}
	return 0
}

func (x *Auth) GetRefreshKey() string {
	if x != nil {
		return x.RefreshKey
	}
	return ""
}

func (x *Auth) GetRefreshExp() int32 {
	if x != nil {
		return x.RefreshExp
	}
	return 0
}

type Google struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientID      string                 `protobuf:"bytes,1,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Google) Reset() {
	*x = Google{}
	mi := &file_bulbasaur_api_bulbasaur_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Google) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Google) ProtoMessage() {}

func (x *Google) ProtoReflect() protoreflect.Message {
	mi := &file_bulbasaur_api_bulbasaur_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Google.ProtoReflect.Descriptor instead.
func (*Google) Descriptor() ([]byte, []int) {
	return file_bulbasaur_api_bulbasaur_config_proto_rawDescGZIP(), []int{2}
}

func (x *Google) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

type FrontEnd struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Url                   string                 `protobuf:"bytes,1,opt,name=Url,proto3" json:"Url,omitempty"`
	ResetPasswordEndpoint string                 `protobuf:"bytes,2,opt,name=ResetPasswordEndpoint,proto3" json:"ResetPasswordEndpoint,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *FrontEnd) Reset() {
	*x = FrontEnd{}
	mi := &file_bulbasaur_api_bulbasaur_config_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrontEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontEnd) ProtoMessage() {}

func (x *FrontEnd) ProtoReflect() protoreflect.Message {
	mi := &file_bulbasaur_api_bulbasaur_config_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontEnd.ProtoReflect.Descriptor instead.
func (*FrontEnd) Descriptor() ([]byte, []int) {
	return file_bulbasaur_api_bulbasaur_config_proto_rawDescGZIP(), []int{3}
}

func (x *FrontEnd) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *FrontEnd) GetResetPasswordEndpoint() string {
	if x != nil {
		return x.ResetPasswordEndpoint
	}
	return ""
}

type Mailer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Domain        string                 `protobuf:"bytes,1,opt,name=Domain,proto3" json:"Domain,omitempty"`
	Endpoint      string                 `protobuf:"bytes,2,opt,name=Endpoint,proto3" json:"Endpoint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Mailer) Reset() {
	*x = Mailer{}
	mi := &file_bulbasaur_api_bulbasaur_config_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mailer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mailer) ProtoMessage() {}

func (x *Mailer) ProtoReflect() protoreflect.Message {
	mi := &file_bulbasaur_api_bulbasaur_config_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mailer.ProtoReflect.Descriptor instead.
func (*Mailer) Descriptor() ([]byte, []int) {
	return file_bulbasaur_api_bulbasaur_config_proto_rawDescGZIP(), []int{4}
}

func (x *Mailer) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Mailer) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

var File_bulbasaur_api_bulbasaur_config_proto protoreflect.FileDescriptor

var file_bulbasaur_api_bulbasaur_config_proto_rawDesc = string([]byte{
	0x0a, 0x24, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75,
	0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x17, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x6f,
	0x67, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x63, 0x61, 0x72, 0x62,
	0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x72, 0x65, 0x64, 0x69, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72,
	0x65, 0x64, 0x69, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb8, 0x04, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x3f, 0x0a, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e,
	0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6c,
	0x6f, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x06, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x12, 0x41,
	0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x12, 0x35, 0x0a, 0x05, 0x72, 0x65, 0x64, 0x69, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x72, 0x65, 0x64, 0x69,
	0x73, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10,
	0x01, 0x52, 0x05, 0x72, 0x65, 0x64, 0x69, 0x73, 0x12, 0x48, 0x0a, 0x0d, 0x68, 0x74, 0x74, 0x70,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x62, 0x6f,
	0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a,
	0x01, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x68, 0x74, 0x74, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x12, 0x34, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02,
	0x10, 0x01, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x3a, 0x0a, 0x06, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61,
	0x73, 0x61, 0x75, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x06, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61,
	0x75, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x45,
	0x6e, 0x64, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x3a, 0x0a, 0x06, 0x6d, 0x61, 0x69, 0x6c, 0x65, 0x72,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61,
	0x75, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x65, 0x72,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x06, 0x6d, 0x61, 0x69, 0x6c,
	0x65, 0x72, 0x22, 0xa6, 0x01, 0x0a, 0x04, 0x41, 0x75, 0x74, 0x68, 0x12, 0x25, 0x0a, 0x09, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b,
	0x65, 0x79, 0x12, 0x25, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x45, 0x78, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x09,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x45, 0x78, 0x70, 0x12, 0x27, 0x0a, 0x0a, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x4b,
	0x65, 0x79, 0x12, 0x27, 0x0a, 0x0a, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x45, 0x78, 0x70,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52,
	0x0a, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x45, 0x78, 0x70, 0x22, 0x2d, 0x0a, 0x06, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x64, 0x0a, 0x08, 0x46, 0x72,
	0x6f, 0x6e, 0x74, 0x45, 0x6e, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x03, 0x55, 0x72,
	0x6c, 0x12, 0x3d, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x00, 0x52, 0x15, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x22, 0x4e, 0x0a, 0x06, 0x4d, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x06, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x23, 0x0a, 0x08, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x42, 0x20, 0x5a, 0x1e, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61, 0x75, 0x72, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x3b, 0x62, 0x75, 0x6c, 0x62, 0x61, 0x73, 0x61,
	0x75, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_bulbasaur_api_bulbasaur_config_proto_rawDescOnce sync.Once
	file_bulbasaur_api_bulbasaur_config_proto_rawDescData []byte
)

func file_bulbasaur_api_bulbasaur_config_proto_rawDescGZIP() []byte {
	file_bulbasaur_api_bulbasaur_config_proto_rawDescOnce.Do(func() {
		file_bulbasaur_api_bulbasaur_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_bulbasaur_api_bulbasaur_config_proto_rawDesc), len(file_bulbasaur_api_bulbasaur_config_proto_rawDesc)))
	})
	return file_bulbasaur_api_bulbasaur_config_proto_rawDescData
}

var file_bulbasaur_api_bulbasaur_config_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_bulbasaur_api_bulbasaur_config_proto_goTypes = []any{
	(*Config)(nil),        // 0: bulbasaur.config.Config
	(*Auth)(nil),          // 1: bulbasaur.config.Auth
	(*Google)(nil),        // 2: bulbasaur.config.Google
	(*FrontEnd)(nil),      // 3: bulbasaur.config.FrontEnd
	(*Mailer)(nil),        // 4: bulbasaur.config.Mailer
	(*api.Listener)(nil),  // 5: greyhole.carbon.Listener
	(*api1.Logger)(nil),   // 6: greyhole.logger.Logger
	(*api2.Database)(nil), // 7: greyhole.database.Database
	(*api3.Redis)(nil),    // 8: greyhole.redis.Redis
}
var file_bulbasaur_api_bulbasaur_config_proto_depIdxs = []int32{
	5, // 0: bulbasaur.config.Config.listener:type_name -> greyhole.carbon.Listener
	6, // 1: bulbasaur.config.Config.logger:type_name -> greyhole.logger.Logger
	7, // 2: bulbasaur.config.Config.database:type_name -> greyhole.database.Database
	8, // 3: bulbasaur.config.Config.redis:type_name -> greyhole.redis.Redis
	5, // 4: bulbasaur.config.Config.http_listener:type_name -> greyhole.carbon.Listener
	1, // 5: bulbasaur.config.Config.auth:type_name -> bulbasaur.config.Auth
	2, // 6: bulbasaur.config.Config.google:type_name -> bulbasaur.config.Google
	3, // 7: bulbasaur.config.Config.frontend:type_name -> bulbasaur.config.FrontEnd
	4, // 8: bulbasaur.config.Config.mailer:type_name -> bulbasaur.config.Mailer
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_bulbasaur_api_bulbasaur_config_proto_init() }
func file_bulbasaur_api_bulbasaur_config_proto_init() {
	if File_bulbasaur_api_bulbasaur_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_bulbasaur_api_bulbasaur_config_proto_rawDesc), len(file_bulbasaur_api_bulbasaur_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bulbasaur_api_bulbasaur_config_proto_goTypes,
		DependencyIndexes: file_bulbasaur_api_bulbasaur_config_proto_depIdxs,
		MessageInfos:      file_bulbasaur_api_bulbasaur_config_proto_msgTypes,
	}.Build()
	File_bulbasaur_api_bulbasaur_config_proto = out.File
	file_bulbasaur_api_bulbasaur_config_proto_goTypes = nil
	file_bulbasaur_api_bulbasaur_config_proto_depIdxs = nil
}
