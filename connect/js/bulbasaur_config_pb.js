// source: bulbasaur_config.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.exportSymbol('proto.bulbasaur.config.Auth', null, global);
goog.exportSymbol('proto.bulbasaur.config.Config', null, global);
goog.exportSymbol('proto.bulbasaur.config.FrontEnd', null, global);
goog.exportSymbol('proto.bulbasaur.config.Google', null, global);
goog.exportSymbol('proto.bulbasaur.config.Mailer', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bulbasaur.config.Config = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bulbasaur.config.Config, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bulbasaur.config.Config.displayName = 'proto.bulbasaur.config.Config';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bulbasaur.config.Auth = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bulbasaur.config.Auth, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bulbasaur.config.Auth.displayName = 'proto.bulbasaur.config.Auth';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bulbasaur.config.Google = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bulbasaur.config.Google, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bulbasaur.config.Google.displayName = 'proto.bulbasaur.config.Google';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bulbasaur.config.FrontEnd = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bulbasaur.config.FrontEnd, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bulbasaur.config.FrontEnd.displayName = 'proto.bulbasaur.config.FrontEnd';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bulbasaur.config.Mailer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bulbasaur.config.Mailer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bulbasaur.config.Mailer.displayName = 'proto.bulbasaur.config.Mailer';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bulbasaur.config.Config.prototype.toObject = function(opt_includeInstance) {
  return proto.bulbasaur.config.Config.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bulbasaur.config.Config} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bulbasaur.config.Config.toObject = function(includeInstance, msg) {
  var f, obj = {
    listener: (f = msg.getListener()) && proto.greyhole.carbon.Listener.toObject(includeInstance, f),
    logger: (f = msg.getLogger()) && proto.greyhole.logger.Logger.toObject(includeInstance, f),
    database: (f = msg.getDatabase()) && proto.greyhole.database.Database.toObject(includeInstance, f),
    redis: (f = msg.getRedis()) && proto.greyhole.redis.Redis.toObject(includeInstance, f),
    httpListener: (f = msg.getHttpListener()) && proto.greyhole.carbon.Listener.toObject(includeInstance, f),
    auth: (f = msg.getAuth()) && proto.bulbasaur.config.Auth.toObject(includeInstance, f),
    google: (f = msg.getGoogle()) && proto.bulbasaur.config.Google.toObject(includeInstance, f),
    frontend: (f = msg.getFrontend()) && proto.bulbasaur.config.FrontEnd.toObject(includeInstance, f),
    mailer: (f = msg.getMailer()) && proto.bulbasaur.config.Mailer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bulbasaur.config.Config}
 */
proto.bulbasaur.config.Config.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bulbasaur.config.Config;
  return proto.bulbasaur.config.Config.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bulbasaur.config.Config} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bulbasaur.config.Config}
 */
proto.bulbasaur.config.Config.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.greyhole.carbon.Listener;
      reader.readMessage(value,proto.greyhole.carbon.Listener.deserializeBinaryFromReader);
      msg.setListener(value);
      break;
    case 2:
      var value = new proto.greyhole.logger.Logger;
      reader.readMessage(value,proto.greyhole.logger.Logger.deserializeBinaryFromReader);
      msg.setLogger(value);
      break;
    case 3:
      var value = new proto.greyhole.database.Database;
      reader.readMessage(value,proto.greyhole.database.Database.deserializeBinaryFromReader);
      msg.setDatabase(value);
      break;
    case 4:
      var value = new proto.greyhole.redis.Redis;
      reader.readMessage(value,proto.greyhole.redis.Redis.deserializeBinaryFromReader);
      msg.setRedis(value);
      break;
    case 8:
      var value = new proto.greyhole.carbon.Listener;
      reader.readMessage(value,proto.greyhole.carbon.Listener.deserializeBinaryFromReader);
      msg.setHttpListener(value);
      break;
    case 9:
      var value = new proto.bulbasaur.config.Auth;
      reader.readMessage(value,proto.bulbasaur.config.Auth.deserializeBinaryFromReader);
      msg.setAuth(value);
      break;
    case 10:
      var value = new proto.bulbasaur.config.Google;
      reader.readMessage(value,proto.bulbasaur.config.Google.deserializeBinaryFromReader);
      msg.setGoogle(value);
      break;
    case 11:
      var value = new proto.bulbasaur.config.FrontEnd;
      reader.readMessage(value,proto.bulbasaur.config.FrontEnd.deserializeBinaryFromReader);
      msg.setFrontend(value);
      break;
    case 12:
      var value = new proto.bulbasaur.config.Mailer;
      reader.readMessage(value,proto.bulbasaur.config.Mailer.deserializeBinaryFromReader);
      msg.setMailer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bulbasaur.config.Config.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bulbasaur.config.Config.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bulbasaur.config.Config} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bulbasaur.config.Config.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListener();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.greyhole.carbon.Listener.serializeBinaryToWriter
    );
  }
  f = message.getLogger();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.greyhole.logger.Logger.serializeBinaryToWriter
    );
  }
  f = message.getDatabase();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.greyhole.database.Database.serializeBinaryToWriter
    );
  }
  f = message.getRedis();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.greyhole.redis.Redis.serializeBinaryToWriter
    );
  }
  f = message.getHttpListener();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.greyhole.carbon.Listener.serializeBinaryToWriter
    );
  }
  f = message.getAuth();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.bulbasaur.config.Auth.serializeBinaryToWriter
    );
  }
  f = message.getGoogle();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.bulbasaur.config.Google.serializeBinaryToWriter
    );
  }
  f = message.getFrontend();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.bulbasaur.config.FrontEnd.serializeBinaryToWriter
    );
  }
  f = message.getMailer();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.bulbasaur.config.Mailer.serializeBinaryToWriter
    );
  }
};


/**
 * optional greyhole.carbon.Listener listener = 1;
 * @return {?proto.greyhole.carbon.Listener}
 */
proto.bulbasaur.config.Config.prototype.getListener = function() {
  return /** @type{?proto.greyhole.carbon.Listener} */ (
    jspb.Message.getWrapperField(this, proto.greyhole.carbon.Listener, 1));
};


/**
 * @param {?proto.greyhole.carbon.Listener|undefined} value
 * @return {!proto.bulbasaur.config.Config} returns this
*/
proto.bulbasaur.config.Config.prototype.setListener = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bulbasaur.config.Config} returns this
 */
proto.bulbasaur.config.Config.prototype.clearListener = function() {
  return this.setListener(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bulbasaur.config.Config.prototype.hasListener = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional greyhole.logger.Logger logger = 2;
 * @return {?proto.greyhole.logger.Logger}
 */
proto.bulbasaur.config.Config.prototype.getLogger = function() {
  return /** @type{?proto.greyhole.logger.Logger} */ (
    jspb.Message.getWrapperField(this, proto.greyhole.logger.Logger, 2));
};


/**
 * @param {?proto.greyhole.logger.Logger|undefined} value
 * @return {!proto.bulbasaur.config.Config} returns this
*/
proto.bulbasaur.config.Config.prototype.setLogger = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bulbasaur.config.Config} returns this
 */
proto.bulbasaur.config.Config.prototype.clearLogger = function() {
  return this.setLogger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bulbasaur.config.Config.prototype.hasLogger = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional greyhole.database.Database database = 3;
 * @return {?proto.greyhole.database.Database}
 */
proto.bulbasaur.config.Config.prototype.getDatabase = function() {
  return /** @type{?proto.greyhole.database.Database} */ (
    jspb.Message.getWrapperField(this, proto.greyhole.database.Database, 3));
};


/**
 * @param {?proto.greyhole.database.Database|undefined} value
 * @return {!proto.bulbasaur.config.Config} returns this
*/
proto.bulbasaur.config.Config.prototype.setDatabase = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bulbasaur.config.Config} returns this
 */
proto.bulbasaur.config.Config.prototype.clearDatabase = function() {
  return this.setDatabase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bulbasaur.config.Config.prototype.hasDatabase = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional greyhole.redis.Redis redis = 4;
 * @return {?proto.greyhole.redis.Redis}
 */
proto.bulbasaur.config.Config.prototype.getRedis = function() {
  return /** @type{?proto.greyhole.redis.Redis} */ (
    jspb.Message.getWrapperField(this, proto.greyhole.redis.Redis, 4));
};


/**
 * @param {?proto.greyhole.redis.Redis|undefined} value
 * @return {!proto.bulbasaur.config.Config} returns this
*/
proto.bulbasaur.config.Config.prototype.setRedis = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bulbasaur.config.Config} returns this
 */
proto.bulbasaur.config.Config.prototype.clearRedis = function() {
  return this.setRedis(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bulbasaur.config.Config.prototype.hasRedis = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional greyhole.carbon.Listener http_listener = 8;
 * @return {?proto.greyhole.carbon.Listener}
 */
proto.bulbasaur.config.Config.prototype.getHttpListener = function() {
  return /** @type{?proto.greyhole.carbon.Listener} */ (
    jspb.Message.getWrapperField(this, proto.greyhole.carbon.Listener, 8));
};


/**
 * @param {?proto.greyhole.carbon.Listener|undefined} value
 * @return {!proto.bulbasaur.config.Config} returns this
*/
proto.bulbasaur.config.Config.prototype.setHttpListener = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bulbasaur.config.Config} returns this
 */
proto.bulbasaur.config.Config.prototype.clearHttpListener = function() {
  return this.setHttpListener(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bulbasaur.config.Config.prototype.hasHttpListener = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Auth auth = 9;
 * @return {?proto.bulbasaur.config.Auth}
 */
proto.bulbasaur.config.Config.prototype.getAuth = function() {
  return /** @type{?proto.bulbasaur.config.Auth} */ (
    jspb.Message.getWrapperField(this, proto.bulbasaur.config.Auth, 9));
};


/**
 * @param {?proto.bulbasaur.config.Auth|undefined} value
 * @return {!proto.bulbasaur.config.Config} returns this
*/
proto.bulbasaur.config.Config.prototype.setAuth = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bulbasaur.config.Config} returns this
 */
proto.bulbasaur.config.Config.prototype.clearAuth = function() {
  return this.setAuth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bulbasaur.config.Config.prototype.hasAuth = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Google google = 10;
 * @return {?proto.bulbasaur.config.Google}
 */
proto.bulbasaur.config.Config.prototype.getGoogle = function() {
  return /** @type{?proto.bulbasaur.config.Google} */ (
    jspb.Message.getWrapperField(this, proto.bulbasaur.config.Google, 10));
};


/**
 * @param {?proto.bulbasaur.config.Google|undefined} value
 * @return {!proto.bulbasaur.config.Config} returns this
*/
proto.bulbasaur.config.Config.prototype.setGoogle = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bulbasaur.config.Config} returns this
 */
proto.bulbasaur.config.Config.prototype.clearGoogle = function() {
  return this.setGoogle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bulbasaur.config.Config.prototype.hasGoogle = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional FrontEnd frontend = 11;
 * @return {?proto.bulbasaur.config.FrontEnd}
 */
proto.bulbasaur.config.Config.prototype.getFrontend = function() {
  return /** @type{?proto.bulbasaur.config.FrontEnd} */ (
    jspb.Message.getWrapperField(this, proto.bulbasaur.config.FrontEnd, 11));
};


/**
 * @param {?proto.bulbasaur.config.FrontEnd|undefined} value
 * @return {!proto.bulbasaur.config.Config} returns this
*/
proto.bulbasaur.config.Config.prototype.setFrontend = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bulbasaur.config.Config} returns this
 */
proto.bulbasaur.config.Config.prototype.clearFrontend = function() {
  return this.setFrontend(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bulbasaur.config.Config.prototype.hasFrontend = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Mailer mailer = 12;
 * @return {?proto.bulbasaur.config.Mailer}
 */
proto.bulbasaur.config.Config.prototype.getMailer = function() {
  return /** @type{?proto.bulbasaur.config.Mailer} */ (
    jspb.Message.getWrapperField(this, proto.bulbasaur.config.Mailer, 12));
};


/**
 * @param {?proto.bulbasaur.config.Mailer|undefined} value
 * @return {!proto.bulbasaur.config.Config} returns this
*/
proto.bulbasaur.config.Config.prototype.setMailer = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bulbasaur.config.Config} returns this
 */
proto.bulbasaur.config.Config.prototype.clearMailer = function() {
  return this.setMailer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bulbasaur.config.Config.prototype.hasMailer = function() {
  return jspb.Message.getField(this, 12) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bulbasaur.config.Auth.prototype.toObject = function(opt_includeInstance) {
  return proto.bulbasaur.config.Auth.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bulbasaur.config.Auth} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bulbasaur.config.Auth.toObject = function(includeInstance, msg) {
  var f, obj = {
    accesskey: jspb.Message.getFieldWithDefault(msg, 1, ""),
    accessexp: jspb.Message.getFieldWithDefault(msg, 2, 0),
    refreshkey: jspb.Message.getFieldWithDefault(msg, 3, ""),
    refreshexp: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bulbasaur.config.Auth}
 */
proto.bulbasaur.config.Auth.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bulbasaur.config.Auth;
  return proto.bulbasaur.config.Auth.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bulbasaur.config.Auth} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bulbasaur.config.Auth}
 */
proto.bulbasaur.config.Auth.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccesskey(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAccessexp(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRefreshkey(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRefreshexp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bulbasaur.config.Auth.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bulbasaur.config.Auth.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bulbasaur.config.Auth} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bulbasaur.config.Auth.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccesskey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccessexp();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getRefreshkey();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRefreshexp();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional string AccessKey = 1;
 * @return {string}
 */
proto.bulbasaur.config.Auth.prototype.getAccesskey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bulbasaur.config.Auth} returns this
 */
proto.bulbasaur.config.Auth.prototype.setAccesskey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 AccessExp = 2;
 * @return {number}
 */
proto.bulbasaur.config.Auth.prototype.getAccessexp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bulbasaur.config.Auth} returns this
 */
proto.bulbasaur.config.Auth.prototype.setAccessexp = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string RefreshKey = 3;
 * @return {string}
 */
proto.bulbasaur.config.Auth.prototype.getRefreshkey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.bulbasaur.config.Auth} returns this
 */
proto.bulbasaur.config.Auth.prototype.setRefreshkey = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 RefreshExp = 4;
 * @return {number}
 */
proto.bulbasaur.config.Auth.prototype.getRefreshexp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.bulbasaur.config.Auth} returns this
 */
proto.bulbasaur.config.Auth.prototype.setRefreshexp = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bulbasaur.config.Google.prototype.toObject = function(opt_includeInstance) {
  return proto.bulbasaur.config.Google.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bulbasaur.config.Google} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bulbasaur.config.Google.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bulbasaur.config.Google}
 */
proto.bulbasaur.config.Google.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bulbasaur.config.Google;
  return proto.bulbasaur.config.Google.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bulbasaur.config.Google} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bulbasaur.config.Google}
 */
proto.bulbasaur.config.Google.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bulbasaur.config.Google.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bulbasaur.config.Google.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bulbasaur.config.Google} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bulbasaur.config.Google.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string ClientID = 1;
 * @return {string}
 */
proto.bulbasaur.config.Google.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bulbasaur.config.Google} returns this
 */
proto.bulbasaur.config.Google.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bulbasaur.config.FrontEnd.prototype.toObject = function(opt_includeInstance) {
  return proto.bulbasaur.config.FrontEnd.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bulbasaur.config.FrontEnd} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bulbasaur.config.FrontEnd.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resetpasswordendpoint: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bulbasaur.config.FrontEnd}
 */
proto.bulbasaur.config.FrontEnd.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bulbasaur.config.FrontEnd;
  return proto.bulbasaur.config.FrontEnd.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bulbasaur.config.FrontEnd} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bulbasaur.config.FrontEnd}
 */
proto.bulbasaur.config.FrontEnd.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setResetpasswordendpoint(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bulbasaur.config.FrontEnd.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bulbasaur.config.FrontEnd.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bulbasaur.config.FrontEnd} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bulbasaur.config.FrontEnd.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResetpasswordendpoint();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string Url = 1;
 * @return {string}
 */
proto.bulbasaur.config.FrontEnd.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bulbasaur.config.FrontEnd} returns this
 */
proto.bulbasaur.config.FrontEnd.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ResetPasswordEndpoint = 2;
 * @return {string}
 */
proto.bulbasaur.config.FrontEnd.prototype.getResetpasswordendpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bulbasaur.config.FrontEnd} returns this
 */
proto.bulbasaur.config.FrontEnd.prototype.setResetpasswordendpoint = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bulbasaur.config.Mailer.prototype.toObject = function(opt_includeInstance) {
  return proto.bulbasaur.config.Mailer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bulbasaur.config.Mailer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bulbasaur.config.Mailer.toObject = function(includeInstance, msg) {
  var f, obj = {
    domain: jspb.Message.getFieldWithDefault(msg, 1, ""),
    endpoint: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bulbasaur.config.Mailer}
 */
proto.bulbasaur.config.Mailer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bulbasaur.config.Mailer;
  return proto.bulbasaur.config.Mailer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bulbasaur.config.Mailer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bulbasaur.config.Mailer}
 */
proto.bulbasaur.config.Mailer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDomain(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndpoint(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bulbasaur.config.Mailer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bulbasaur.config.Mailer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bulbasaur.config.Mailer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bulbasaur.config.Mailer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDomain();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEndpoint();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string Domain = 1;
 * @return {string}
 */
proto.bulbasaur.config.Mailer.prototype.getDomain = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bulbasaur.config.Mailer} returns this
 */
proto.bulbasaur.config.Mailer.prototype.setDomain = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Endpoint = 2;
 * @return {string}
 */
proto.bulbasaur.config.Mailer.prototype.getEndpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bulbasaur.config.Mailer} returns this
 */
proto.bulbasaur.config.Mailer.prototype.setEndpoint = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


